{{- $architecture := or .architecture "arm64" -}}
{{- $firmware_version := or .firmware_version "master" -}}
{{- $kernel_version := or .kernel_version "" -}}

architecture: {{ $architecture }}

actions:
  - action: download
    description: Download latest version of the firmware from GitHub
    url: https://github.com/raspberrypi/firmware/archive/{{ $firmware_version }}.tar.gz
    unpack: true
    name: firmware

  - action: overlay
    description: Apply downloaded RPi firmware
    origin: firmware
    source: firmware-{{ $firmware_version }}/boot
    destination: /boot/firmware

  - action: run
    description: Remove downloaded kernel and dtb files
    chroot: true
    command: rm -rvf /boot/firmware/kernel*.img /boot/firmware/*.dtb /boot/firmware/overlays

  - action: apt
    packages:
      - file
      - gcc
      - wget
      - make
      - patch
      - build-essential
      - bc
      - bison
      - flex
      - libssl-dev
      - firmware-brcm80211
      - rpi.gpio-common

  - action: overlay
    description: Add Raspberry Pi 4 root overlay
    source: ../overlays/02-rpi4
    destination: /

  - action: run
    origin: kernel
    chroot: true
    description: Install kernel
    label: dpkg
    command: dpkg -i /var/tmp/*.deb && rm /var/tmp/* -r

  - action: run
    description: Copy dtb and kernel ({{ $kernel_version }}) to boot firmware partition
    chroot: true
    script: ../scripts/02-link_kernel.sh {{ $kernel_version }}

#  - action: run
#    description: Get and Install Kernel Packages
#    chroot: true
#    script: ../scripts/02-get_raspi_kernel.sh

  - action: run
    description: Patch kernel headers
    chroot: true
    script: ../scripts/02-patch_kernel_headers.sh

#  - action: run
#    description: Set root device in cmdline.txt
#    chroot: true
#    script: ../scripts/02-set_root_fs.sh

  - action: run
    description: Set hostname
    chroot: true
    command: echo raspberrypi4 > /etc/hostname
